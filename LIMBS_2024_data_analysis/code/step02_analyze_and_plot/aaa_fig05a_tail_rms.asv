%% fig05a01_calculate_tail_rms_and_angular_velocity.m
% Updated 04.12.2024
% LIMBS Lab
% Author: Huanying (Joy) Yeh
% 
% Experiment Name: Eigenmannia Virescens Luminance + Locomotion Comparisons
%
% Content:
% - Calculate the tail rms (fig5a) and angular velocities (fig5c) 
% - Plot the fig5a in "\figures"
% 
% - "fig05a_tail_rms_all_fish.png"
% 
% - Save the struct to 
% "result_tail_rms.mat"

close all
addpath 'helper_functions'

%% 1. Specify folder paths and load the structs
parent_dir = fullfile(pwd, '..', '..');
abs_path = fullfile(parent_dir, 'data_structures\');

out_path = fullfile(parent_dir, 'figures\');
out_pdf_path = fullfile(parent_dir, 'figures_pdf\');
out_archive_path = fullfile(parent_dir, 'figures_archive\fig05a_tail_rms\');
if ~exist(out_archive_path, 'dir')
    mkdir(out_archive_path);
end

pdf_path = fullfile(parent_dir, 'figures_pdf\');

all_fish = load(fullfile(abs_path, 'data_clean_body.mat'), 'all_fish').all_fish;
raw = load(fullfile(abs_path, 'result_tail_positions.mat'), 'raw').raw;
res = raw;

fishNames = {'Hope', 'Len', 'Doris', 'Finn', 'Ruby'}; % consistent with SICB
p2m = 0.0004;
num_frames = 500;


%% 2. Populate data calculations for RMS

for i = 1 : 5
    num_ils = numel(all_fish(i).luminance);
    for il = 1: num_ils

        res(i).luminances(il).rms = [];
       
        num_trials = numel(res(i).luminances(il).x_tail);
        if num_trials < 4
            continue;
        else
            for trial_idx = 1 : num_trials 
                y = cell2mat(res(i).luminances(il).y_tail(trial_idx));
                rms_displacement = rms((y - mean(y)),'omitnan');
                res(i).luminances(il).rms(trial_idx) = rms_displacement;
            end
        end
        
        res(i).luminances(il).rms_mean = mean(res(i).luminances(il).rms);
        res(i).luminances(il).rms_std = std(res(i).luminances(il).rms, 'omitnan');

    end
end

save([abs_path, 'result_tail_rms.mat'], 'res');
disp('SUCCESS: fish tail y-position RMS saved at result_tail_rms.mat.');

%% 3. Plotting starts here
num_body_pts = 12;
num_fish = 5;
target_pt = 12; % only look at tail
field_name = 'rmsMean';
colorMap = cool(num_fish+1);

figure;
hold on;
set(gca, 'XScale', 'log'); % Set log scale for x-axis

%% 2. Gather data
all_lux = [];
all_data_pts = [];
all_data_pts_processed = [];
avg_rms = zeros(5, 1);

for i = 1:num_fish
    num_ils = numel(res(i).luminances);

    rms_values = [res(i).luminances.rms_mean];
    
    % Calculate the average of the 'rms' field values
    avg_rms(i) = mean(rms_values, 'omitnan');

    all_data_pts = [all_data_pts, rms_values];

end
mean_value_all = mean(all_data_pts);

for i = 1 %:num_fish
    fish_name = fishNames{i};

    if i == 1 % Get rid of Hope lux 1, 3, 9
        lux = [0.4, 2, 3.5, 5.5, 7, 9.5, 15, 30, 60, 150, 210];     
    else
        lux = [res(i).luminances.lux];
    end

    % Centered, then smoothed for x-variance values
    data = [res(i).luminances.rms_mean];
    std_dev = [res(i).luminances.rms_std];
    % data_smoothed_centered = movmean(data - (avg_rms(i) - mean_value_all), 3)';
    data_smoothed_centered = (data - (avg_rms(i) - mean_value_all))';
    % Collect all data for Sigmoid fitting
    all_lux = [all_lux, lux];
    all_data_pts_processed = [all_data_pts_processed; data_smoothed_centered];

    fish_line = plot(lux, data_smoothed_centered, '-', 'Color', colorMap(i, :), ...
        'LineWidth', 2, 'Marker', 'o', 'MarkerSize', 3, 'MarkerFaceColor', colorMap(i, :)...
        'DisplayName', );
    
    errorbar(lux, data_smoothed_centered, std_dev, ...
        'o', 'Color', colorMap(i, :), 'MarkerFaceColor', colorMap(i, :));
end

%% 3. Fit sigmoid function then plot it
x = log(all_lux');
y = all_data_pts_processed;
[fitted_model, gof] = createSigmoidFit(x, y);

num_sample_points = 500;
x_sample_points = linspace(min(x), max(x), num_sample_points);
y_sample_points = feval(fitted_model, x_sample_points);
a = fitted_model.a;
b = fitted_model.b;
c = fitted_model.c;
d = fitted_model.d;

sigmoid_trend = plot(exp(x_sample_points), y_sample_points, 'Color', 'k', 'LineWidth', 3, 'DisplayName', ...
    sprintf('Sigmoid R^2 = %.2f', gof.rsquare));

hold on;
legend(sigmoid_trend, 'Location', 'best');

grid on; % Display grid
title(' All Fish Tail Average RMS Values, MoveMean = 3'); % Set plot title
subtitle(['Fitted Sigmoid: a=', num2str(a), ', b=', num2str(b), ...
    ', c=', num2str(c), ', d=', num2str(d)]);

lux_ticks = [0.4, 2, 3.5, 7, 9.5, 15, 30, 60, 210];
xticks(lux_ticks);
xticklabels(lux_ticks);

xlim([0, 220]);
ylim([0, 35]);

xlabel('Illuminance (lux)');
ylabel('Tail Point RMS Postion (cm^2)')
% legend('Fish 1', 'Fish 2', 'Fish 3', 'Fish 4', 'Fish 5', ['Sigmoid: R^2 = ', num2str(gof.rsquare)], 'Location', 'southwest'); % Add legend
% legend(sprintf('Fish %d',  'Location', 'southwest');

%% 4. Save to figure
saveas(gcf, [out_path,  'fig05a_tail_rms_vs_illuminance.png']);
saveas(gcf, [out_pdf_path,  'fig05a_tail_rms_vs_illuminance.pdf']);
disp('SUCCESS: fig05a_tail_rms_vs_illuminance.png is saved.');

%% Helper: Sigmoid parameters generated by MATLAB on 12-Mar-2024 15:48:24
function [fitresult, gof] = createSigmoidFit(x, y)
 
[xData, yData] = prepareCurveData( x, y );

ft = fittype( 'a/(1+exp(-b*(x-c)))+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.933993247757551 0.678735154857773 0.757740130578333 0.743132468124916];

[fitresult, gof] = fit( xData, yData, ft, opts );
end

